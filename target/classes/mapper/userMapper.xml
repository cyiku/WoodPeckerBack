<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woodpecker.dao.UserDao">

	<!--region 设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称一致-->
	<resultMap id="BaseResultMap" type="com.woodpecker.domain.User">
		<result column="id" property="id" jdbcType="INTEGER"/>
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="userMap" type="com.woodpecker.domain.User">
		<id property="id" column="ID"/>
		<result property="username" column="username"/>
		<result property="password" column="password"/>
		<collection property="roles" ofType="string">
			<result column="name" property="name"/>
		</collection>
	</resultMap>

	<resultMap id="KeywordMap" type="com.woodpecker.domain.Keyword">
		<result column="id" property="keywordid" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sites" property="sites" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="NormalCollectionMap" type="com.woodpecker.domain.NormalCollection">
		<result column="dataid" property="dataid" jdbcType="INTEGER" />
		<result column="data" property="data" jdbcType="VARCHAR" />
		<result column="iscollection" property="iscollection" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="TableCollectionMap" type="com.woodpecker.domain.TableCollection">
		<result column="dataid" property="dataid" jdbcType="INTEGER" />
		<result column="data" property="data" jdbcType="VARCHAR" />
		<result column="tableid" property="tableid" jdbcType="BIGINT" />
		<result column="iscollection" property="iscollection" jdbcType="INTEGER" />
	</resultMap>

	<resultMap id="SiteMap" type="com.woodpecker.domain.Site">
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="TopicMap" type="com.woodpecker.domain.Topic">
		<result column="topicid" property="id" jdbcType="INTEGER"/>
		<result column="word" property="word" jdbcType="VARCHAR"/>
		<result column="time" property="time" jdbcType="VARCHAR"/>
	</resultMap>
	<!-- endregion -->

	<!-- region 登录注册相关-->
	<select id="getUser"  resultMap="BaseResultMap">
		SELECT * FROM user_t WHERE username = #{username}
	</select>

	<select id="findByUserName" parameterType="String" resultMap="userMap">
		select u.*
		,r.name
		from user_t u
		LEFT JOIN role_user ru on u.id= ru.user_id
		LEFT JOIN role_t r on ru.role_id=r.id
		where username= #{username}
	</select>

	<insert id="insert" >
		INSERT INTO user_t(username,password) VALUES("${username}", "${password}");
		insert into role_user(role_id, user_id) select r.id, u.id from role_t r, user_t u where r.name in
			<foreach item="item" index="" collection="roles"
					 open="(" close=")" separator=",">"${item}"
			</foreach> and u.username="${username}";
	</insert>
	<!-- endregion -->

	<!-- region 建表相关 -->

	<update id="createCollectionNormal" parameterType="String">
		CREATE TABLE ${_parameter} (
		dataid VARCHAR(255) NOT NULL PRIMARY KEY,
		data MEDIUMTEXT NOT NULL,
		iscollection INTEGER NOT NULL
		)
	</update>

	<update id="createCollectionTable" parameterType="String">
		CREATE TABLE ${_parameter} (
		dataid VARCHAR(255) NOT NULL PRIMARY KEY,
		data MEDIUMTEXT NOT NULL,
		tableid BIGINT NOT NULL PRIMARY KEY,
		iscollection INTEGER NOT NULL
		)
	</update>
	<!-- endregion -->

	<!-- region keyword相关 -->
	<select id="getKeyword"  resultMap="KeywordMap">
		SELECT * FROM keyword_t WHERE userid = ${user.id}
	</select>

	<insert id="addKeyword" >
		INSERT INTO keyword_t(userid,name,sites) VALUES(${user.id},"${keyword.name}", "${keyword.sites}")
	</insert>

	<select id="searchKeyword" resultMap="KeywordMap">
		SELECT * FROM keyword_t WHERE userid = ${user.id} AND name = "${keyword.name}"
	</select>

	<delete id="delKeyword" >
		DELETE FROM keyword_t WHERE userid = ${user.id} AND name = "${keyword.name}"
	</delete>

	<update id="updateKeyword" >
		UPDATE keyword_t SET name = "${keyword.name}", sites = "${keyword.sites}"
		WHERE userid = ${user.id} AND keywordid = ${keyword.keywordid}
	</update>
	<!-- endregion -->

	<!-- region NormalCollection相关 -->
	<select id="getNormalCollection"  resultMap="NormalCollectionMap">
		SELECT * FROM ${tableName} WHERE iscollection = 1
	</select>
	<insert id="addNormalCollection" >
		INSERT INTO ${tableName}(dataid,data,iscollection)
		VALUES('${normalCollection.dataid}','${normalCollection.data}',${normalCollection.iscollection})
	</insert>
	<select id="searchNormalCollection" resultMap="NormalCollectionMap">
		SELECT * FROM ${tableName} WHERE dataid = '${normalCollection.dataid}'
	</select>
	<update id="resetNormalCollection">
		UPDATE ${tableName} SET iscollection = 1
		WHERE dataid='${normalCollection.dataid}'
	</update>
	<update id="delNormalCollection">
		UPDATE ${tableName} SET iscollection = 0
		WHERE dataid='${normalCollection.dataid}'
	</update>
	<!-- endregion -->

	<!-- region TableCollection相关 -->
	<select id="getTableCollection"  resultMap="TableCollectionMap">
		SELECT * FROM ${tableName}
		WHERE tableid != 0 AND iscollection = 1
		ORDER BY tableid
	</select>
	<insert id="addTableCollection" >
		INSERT INTO ${tableName}(dataid,data,tableid,iscollection) VALUES
		<foreach item="item" index="" collection="tableCollection"
				 open="" close="" separator=",">
			('${item.dataid}','${item.data}',${item.tableid},${item.iscollection})
		</foreach>
	</insert>
	<select id="searchTableCollection"  resultMap="TableCollectionMap">
		SELECT * FROM ${tableName} WHERE tableid IN (
		SELECT tableid FROM ${tableName} WHERE tableid IN (
		SELECT tableid FROM ${tableName}
		WHERE dataid IN (
		<foreach item="item" index="" collection="tableCollection"
				 open="" close="" separator=",">'${item.dataid}'
		</foreach>
		) GROUP BY tableid HAVING COUNT(dataid) = ${tableCollection.size()}
		) GROUP BY tableid HAVING COUNT(dataid) = ${tableCollection.size()}
		)
	</select>
	<update id="resetTableCollection">
		UPDATE ${tableName} SET iscollection = 1 WHERE tableid IN (
		<foreach item="item" index="" collection="tableCollection"
				 open="" close="" separator=",">
			${item.tableid}
		</foreach>
		)
	</update>
	<update id="delTableCollection">
		UPDATE ${tableName} SET iscollection = 0 WHERE tableid IN (
		SELECT tableid FROM (SELECT * FROM ${tableName}) AS temp WHERE tableid IN (
		SELECT tableid FROM (SELECT * FROM ${tableName}) AS temp
		WHERE dataid IN (
		<foreach item="item" index="" collection="tableCollection"
				 open="" close="" separator=",">'${item.dataid}'
		</foreach>
		) GROUP BY tableid HAVING COUNT(dataid) = ${tableCollection.size()}
		) GROUP BY tableid HAVING COUNT(dataid) = ${tableCollection.size()}
		)
	</update>
	<!-- endregion -->

	<!-- region sites -->

	<select id="getSite" resultMap="SiteMap">
		SELECT * from site_t
	</select>

	<!-- endregion -->

	<!-- region stats -->
	<select id="tableCount" parameterType="String" resultType="Integer">
		SELECT COUNT(*) FROM ${tableName}
	</select>

	<select id="timeCount" resultType="Integer">
		SELECT COUNT(*) FROM ${tableName} WHERE content LIKE '%"time" : "${time}%'
	</select>

	<select id="posTimeCount" resultType="Integer">
		SELECT COUNT(*) FROM ${tableName} WHERE content LIKE '%"time" : "${time}%' AND content LIKE '%"sentiment" : "1"%'
	</select>

	<select id="negTimeCount" resultType="Integer">
		SELECT COUNT(*) FROM ${tableName} WHERE content LIKE '%"time" : "${time}%' AND content LIKE '%"sentiment" : "0"%'
	</select>
	<!-- endregion -->

	<!-- region 杂项 utils -->
	<select id="existsTable" parameterType="String" resultType="String">
		SHOW TABLES LIKE #{tableName}
	</select>
	<!-- endregion -->

	<!-- region topic -->

	<select id="getClustering" resultMap="TopicMap">
		SELECT topicid, word, time from lda WHERE isNew=1
	</select>

	<!-- endregion -->

	<!-- region info -->
	<select id="getInfo" parameterType="String" resultType="String">
		SELECT content FROM ${tableName}
	</select>
	<!-- endregion -->

</mapper>